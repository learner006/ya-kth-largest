АЛГОРИТМ
========

1.
В позиционной системе счисления "вес" разряда определяется его позицией: чем левее разряд в записи числа, тем больше он "весит". Следовательно, идея алгоритма будет заключаться в том, чтобы брать наибольшие цифры из B и подставлять как можно левее в запись числа A (если место УЖЕ не занято бОльшим разрядом). Следует заметить, что нулевой разряд из B подставлять не имеет смысла.

2.
Чтобы алгоритм работал быстрее, сохраним данные по 9 возможным разрядам числа B и их количеству в дополнительной структуре данных: массиве (в смысле языка C) размерностью 10. Для однобайтовых символов из ASCII набора навигация по массиву будет элементарной: arr['9'-'0'], например.
(Для двухбайтовых символов Unicode индексация будет такой же или можно предусмотреть функцию замен индексов "Код символа" -> "Индекс в массиве")

3.
Имея массив с числом вхождений каждого разряда числа B, просто меняем меньшие разряды из A, начиная слева, на неиспользованые большие разряды из B (не забывая уменьшать счётчик).

Как только используем все разряды B или переберём все разряды A, алгоритм закончен.